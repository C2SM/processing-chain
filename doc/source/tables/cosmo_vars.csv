**Name**,**Description**,**Used in**
oae_dir,Path to where the online emission datasets are found, :func:`jobs.oae.main`
oae_gridded_emissions_nc,Name of the main emission netCDF file (online emissions), :func:`jobs.oae.main`
oae_vertical_profiles_nc,Name of the netCDF file for vertical profile scaling (online emissions), :func:`jobs.oae.main`
oae_hourofday_nc,Name of the netCDF file for 'hour of day' scaling (online emissions), :func:`jobs.oae.main`
oae_hourofyear_nc,Name of the netCDF file for 'hour of year' scaling (online emissions), :func:`jobs.oae.main`
oae_dayofweek_nc,Name of the netCDF file for 'day of week' scaling (online emissions), :func:`jobs.oae.main`
oae_monthofyear_nc,Name of the netCDF file for 'month of year' scaling (online emissions), :func:`jobs.oae.main`
vprm_dir,Path to the directory containing bioflux-files, :func:`jobs.biofluxes.main`
vprm_prefix,"Prefix of the the bioflux-files. Filenames are assumed to be ``{vprm_prefix}YYYYMMDDHH.nc``. If multiple bioflux-datasets exists, this is a list of prefixes. All files are assumed to be in ``vprm_dir``", :func:`jobs.biofluxes.main`
online_vprm_dir,Path to the directory containing netCDF files with pre-processed MODIS reflectance (``modis_filename``) and vegetation class fraction (``vegetation_filename``) data, :func:`jobs.online_vprm.main`
modis_filename,Name of the pre-processed MODIS netCDF file, :func:`jobs.online_vprm.main`
vegetation_filename,Name of the pre-processed vegetation class fraction netCDF file, :func:`jobs.online_vprm.main`
cams_dir_orig,Path to input-directory for CAMS-files, :func:`jobs.icbc.main`
cams_dir_proc,"Path to the processed CAMS-files. Processed CAMS-files are stored here, if there are files found here then ``cams_dir_orig`` is not used", :func:`jobs.icbc.main`
cams_parameters,"Parameters for the processing of CAMS-data, more information in ``config.py`` of example case", :func:`jobs.icbc.main`
post_int2lm_species,List of variables for the post_int2lm-job, :func:`jobs.post_int2lm.main`
restart_step,Number of hours between restarts of cosmo or - if ``subtarget = 'spinup'`` - between consecutive runs, :func:`run_chain.restart_runs`
spinup,Number of hours for meteorological spinup. This has only an effect if ``subtarget`` is set to ``spinup``. It disables classical **COSMO** restarts. The simulation interval is still determined by ``restart_step``, :func:`run_chain.restart_runs_spinup`
