**Name**,**Description**,**Used in**
target," **COSMO** or **COSMOART**, defaults to **COSMO** if omitted", all
subtarget," **NONE** or **SPINUP**, defaults to **NONE** if omitted", all
constraint, Either 'gpu' or 'mc'. Controls on which nodes int2lm and cosmo run. Make sure your executables are compiled for the chosen architecure., ":func:`jobs.cosmo.main`, :func:`jobs.icon.main`, :func:`jobs.int2lm.main`"
mail_address, The processing-chain sends encountered errors to this address, :func:`jobs.tools.__init__.send_mail`
compute_host, On which infrastructure the processing chain is run. Usually 'daint'," :func:`jobs.post_cosmo.main`, :func:`jobs.icon.main`, :func:`jobs.reduce_output.main`"
compute_queue, Either 'debug' or 'normal'," :func:`jobs.int2lm.main`, :func:`jobs.cosmo.main`, :func:`jobs.icon.main`"
compute_account, Which project the simulation belongs to," :func:`jobs.int2lm.main`, :func:`jobs.cosmo.main`, :func:`jobs.icon.main`"
chain_src_dir, Path to the root of the chain, all
casename," Name of the simulation, the same as the directory-name the ``config.py``-file is in", all
input_root, Path to zhe root of the input-direcetory tree, all
output_root," Path to where the results, logs and nameslists are copied to after the simulation is done", ":func:`jobs.post_cosmo.main`, :func:`jobs.icon.main`"
work_root, Path to where the processing chain copies the input files to and starts the simulation from, all
