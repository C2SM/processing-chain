pipeline {
    environment {
       EMAIL_TO_1 = 'michael.jaehn@c2sm.ethz.ch'
    }
    agent {
        node {
            label 'daint'
        }
    }
    stages {
        stage('Setup miniconda') {
            environment {
                PATH = "${WORKSPACE}/miniconda/bin:$PATH"
            }
            steps {
                sh 'wget -O ${WORKSPACE}/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh'
                sh 'rm -fr ${WORKSPACE}/miniconda'
                sh 'bash miniconda.sh -b -p $WORKSPACE/miniconda'
                sh 'conda config --set always_yes yes --set changeps1 no'
                sh 'conda config --add channels conda-forge'
                sh 'conda update -n base -c defaults conda'
                sh 'conda env create -f env/environment.yml'
                sh '''source ${WORKSPACE}/miniconda/etc/profile.d/conda.sh
                    conda activate proc-chain
                    conda deactivate
                    rm miniconda.sh'''
            }
            post {
                failure {
                    echo 'Cleaning up workspace'
                    deleteDir()
                }
            }
        }
        stage('Setup spack') {
            steps {
                sh './jenkins/scripts/setup-spack.sh'
            }
            post {
                failure {
                    echo 'Cleaning up workspace'
                    deleteDir()
                }
            }
        }
        stage('Preparation') {
            parallel {
                stage('Get data') {
                    steps {
                        sh './jenkins/scripts/get_data.sh'
                    }
                    post {
                        failure {
                            echo 'Cleaning up workspace'
                            deleteDir()
                        }
                    }
                }
                stage('Build int2lm') {
                    steps {
                        sh '''source ${WORKSPACE}/miniconda/etc/profile.d/conda.sh
                        conda activate proc-chain
                        ./jenkins/scripts/build_int2lm.sh'''
                    }
                    post {
                        failure {
                            echo 'Cleaning up workspace'
                            deleteDir()
                        }
                    }
                }
                stage('Build COSMO-GHG') {
                    steps {
                        sh '''source ${WORKSPACE}/miniconda/etc/profile.d/conda.sh
                        conda activate proc-chain
                        ./jenkins/scripts/build_cosmo-ghg.sh'''
                    }
                    post {
                        failure {
                            echo 'Cleaning up workspace'
                            deleteDir()
                        }
                    }
                }
                stage('Build ICON') {
                    steps {
                        sh '''source ${WORKSPACE}/miniconda/etc/profile.d/conda.sh
                        conda activate proc-chain
                        ./jenkins/scripts/build_icon.sh'''
                    }
                    post {
                        failure {
                            echo 'Cleaning up workspace'
                            deleteDir()
                        }
                    }
                }
                stage('Build ICON-ART') {
                    steps {
                        sh '''source ${WORKSPACE}/miniconda/etc/profile.d/conda.sh
                        conda activate proc-chain
                        ./jenkins/scripts/build_icon-art.sh'''
                    }
                    post {
                        failure {
                            echo 'Cleaning up workspace'
                            deleteDir()
                        }
                    }
                }
            }
        }
        stage('Test COSMO-GHG') {
            environment {
                PATH = "${WORKSPACE}/miniconda/bin:$PATH"
            }
            steps {
                sh '''source ${WORKSPACE}/miniconda/etc/profile.d/conda.sh
                conda activate proc-chain
                . ${WORKSPACE}/src/spack-c2sm/setup-env.sh
                ./jenkins/scripts/test_cosmo-ghg.sh'''
            }
            post {
                failure {
                    echo 'Cleaning up workspace'
                    deleteDir()
                }
            }
        }
        stage('Test COSMO-GHG (spinup)') {
            environment {
                PATH = "${WORKSPACE}/miniconda/bin:$PATH"
            }
            steps {
                sh '''source ${WORKSPACE}/miniconda/etc/profile.d/conda.sh
                conda activate proc-chain
                . ${WORKSPACE}/src/spack-c2sm/setup-env.sh
                ./jenkins/scripts/test_cosmo-ghg-spinup.sh'''
            }
            post {
                failure {
                    echo 'Cleaning up workspace'
                    deleteDir()
                }
            }
        }
        stage('Test ICON') {
            environment {
                PATH = "${WORKSPACE}/miniconda/bin:$PATH"
            }
            steps {
                sh '''source ${WORKSPACE}/miniconda/etc/profile.d/conda.sh
                conda activate proc-chain
                . ${WORKSPACE}/src/spack-c2sm/setup-env.sh
                ./jenkins/scripts/test_icon.sh'''
            }                     
            post {
                failure {
                    echo 'Cleaning up workspace'
                    deleteDir()
                }
            }
        }
        stage('Test ICON-ART (OEM)') {
            environment {
                PATH = "${WORKSPACE}/miniconda/bin:$PATH"
            }
            steps {
                sh '''source ${WORKSPACE}/miniconda/etc/profile.d/conda.sh
                conda activate proc-chain
                . ${WORKSPACE}/src/spack-c2sm/setup-env.sh
                ./jenkins/scripts/test_icon-art-oem.sh'''
            }                     
            post {
                failure {
                    echo 'Cleaning up workspace'
                    deleteDir()
                }
            }
        }
        stage('Test ICON-ART (global)') {
            environment {
                PATH = "${WORKSPACE}/miniconda/bin:$PATH"
            }
            steps {
                sh '''source ${WORKSPACE}/miniconda/etc/profile.d/conda.sh
                conda activate proc-chain
                . ${WORKSPACE}/src/spack-c2sm/setup-env.sh
                ./jenkins/scripts/test_icon-art-global.sh'''
            }                     
            post {
                failure {
                    echo 'Cleaning up workspace'
                    deleteDir()
                }
            }
        }
    }
    post {
        always{
            echo 'Cleaning up workspace'
                deleteDir()
        }
        failure {
            mail to: "${env.EMAIL_TO_1}",
            subject: "Jenkins Pipeline Failed: ${currentBuild.fullDisplayName}",
            body: """The Jenkins pipeline ${currentBuild.fullDisplayName} has failed.
		
                View the build: ${env.BUILD_URL}
                """
        }
    }
}
