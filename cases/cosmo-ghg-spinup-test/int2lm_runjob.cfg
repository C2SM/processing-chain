#!/bin/bash -l
#SBATCH --job-name=int2lm
#SBATCH --account={cfg.compute_account}
#SBATCH --time={walltime}
#SBATCH --nodes={nodes}
#SBATCH --ntasks-per-core=1
#SBATCH --ntasks-per-node={cfg.ntasks_per_node}
#SBATCH --cpus-per-task=1
#SBATCH --partition={compute_queue}
#SBATCH --constraint={cfg.constraint}
#SBATCH --hint=nomultithread
#SBATCH --output={logfile}
#SBATCH --open-mode=append
#SBATCH --chdir={int2lm_run}

# Export env variables
export OMP_NUM_THREADS=1
export CRAY_CUDA_MPS=1

export MALLOC_MMAP_MAX_=0
export MALLOC_TRIM_THRESHOLD_=536870912

# Set this to avoid segmentation faults
ulimit -s unlimited
ulimit -a

# Load modules for post-processing
module load daint-{cfg.constraint}
module load NCO
module list

set -e -x

unset G2G
export MV2_USE_CUDA=0
export MV2_USE_GPUDIRECT=0

rm -f YU*

echo "====================================================="
echo "============== JOB OUTPUT BEGINS ===================="
echo "============== StartTime: `date +%s` s"
echo "============== StartTime: `date`"
echo "====================================================="
        
srun -u -n {np_tot} ./int2lm >> {logfile} 2>&1
pid=$?

echo "====================================================="
echo "============== JOB OUTPUT ENDS ===================="
echo "============== EndTime: `date +%s` s"
echo "============== EndTime: `date` s"
echo "====================================================="

[[ $pid == 0 ]] || {{ echo \"Executing INT2LM MPI command failed\" >> job.out; exit 1; }}
