#!/usr/bin/env bash
#SBATCH --job-name="{cfg.casename}_{cfg.startdate_sim_yyyymmddhh}_{cfg.forecasttime}"
#SBATCH --account={cfg.compute_account}
#SBATCH --time={cfg.icon_walltime}
#SBATCH --nodes={cfg.icon_np_tot}
#SBATCH --ntasks-per-node={cfg.ntasks_per_node}
#SBATCH --partition={cfg.compute_queue}
#SBATCH --constraint={cfg.constraint}
#SBATCH --hint=nomultithread
#SBATCH --output={logfile}
#SBATCH --open-mode=append
#SBATCH --chdir={cfg.icon_work}

# OpenMP environment variables                                                 
# ----------------------------                                                 
export OMP_NUM_THREADS=1                                                       
export ICON_THREADS=1                                                          
export OMP_SCHEDULE=static,12                                                  
export OMP_DYNAMIC="false"                                                     
export OMP_STACKSIZE=200M         

set -e -x

# -- ECCODES path                                               
export ECCODES_DEFINITION_PATH={cfg.eccodes_dir}/definitions.edzw-2.12.5-2:{cfg.eccodes_dir}/definitions

# ----------------------------------------------------------------------------
# Link radiation input files
# ----------------------------------------------------------------------------
ln -sf {cfg.art_input_folder}/* .
ln -sf {cfg.art_input_folder}/* .

# ----------------------------------------------------------------------------
# Create ICON master namelist
# ----------------------------------------------------------------------------

cat > icon_master.namelist << EOF
! master_nml: ----------------------------------------------------------------
&master_nml
 lrestart                   =  {cfg.lrestart}        ! .TRUE.=current experiment is resumed
 read_restart_namelists     =  .true.
/

! master_time_control_nml: ---------------------------------------------------
&master_time_control_nml
 calendar                    = 'proleptic gregorian'
 restartTimeIntval           = '{cfg.restart_step}'
 checkpointTimeIntval        = '{cfg.restart_step}'
 experimentStartDate         = '{cfg.ini_datetime_string}' 
 experimentStopDate          = '{cfg.end_datetime_string}'
/

! master_model_nml: repeated for each model ----------------------------------
&master_model_nml
 model_type                  =                          1         ! identifies which component to run (atmosphere,ocean,...)
 model_name                  =                      "ATMO"        ! character string for naming this component.
 model_namelist_filename     =              "NAMELIST_{cfg.casename}"        ! file name containing the model namelists
 model_min_rank              =                          1         ! start MPI rank for this model
 model_max_rank              =                      65536         ! end MPI rank for this model
 model_inc_rank              =                          1         ! stride of MPI ranks
/
EOF

# ----------------------------------------------------------------------
# Create model namelists
# ----------------------------------------------------------------------

cat > NAMELIST_{cfg.casename} << EOF
! parallel_nml: MPI parallelization -------------------------------------------
&parallel_nml
 nproma                      =                          8         ! optimal setting 8 for CRAY; use 16 or 24 for IBM
 num_io_procs                =                          1         ! up to one PE per output stream is possible
 num_prefetch_proc           =                          1
/


! grid_nml: horizontal grid --------------------------------------------------
&grid_nml
 dynamics_grid_filename      = "{cfg.input_files_scratch_dynamics_grid_filename}"    ! array of the grid filenames for the dycore
 dynamics_parent_grid_id     =                          0                ! array of the indexes of the parent grid filenames
 lredgrid_phys               =                      .TRUE.               ! .true.=radiation is calculated on a reduced grid
 lfeedback                   =                      .TRUE.               ! specifies if feedback to parent grid is performed
 ifeedback_type              =                          2                ! feedback type (incremental/relaxation-based)
/


! initicon_nml: specify read-in of initial state ------------------------------
&initicon_nml
 init_mode                   =                             2           ! 2: start from IFS data
 ifs2icon_filename           = '{cfg.input_files_scratch_inicond_filename}'        ! initial data filename
 zpbl1                       =                            500.         ! bottom height (AGL) of layer used for gradient computation
 zpbl2                       =                           1000.         ! top height (AGL) of layer used for gradient computation
/ 

! extpar_nml: external data --------------------------------------------------
&extpar_nml
 extpar_filename             = '{cfg.input_files_scratch_extpar_filename}'    ! filename of external parameter input file
 itopo                       =                          1         ! topography (0:analytical)
 itype_vegetation_cycle      =                          2         ! specifics for annual cycle of LAI
 n_iter_smooth_topo          =                          1         ! iterations of topography smoother
 heightdiff_threshold        =                       2250.         
 hgtdiff_max_smooth_topo     =                        750.     
 read_nc_via_cdi             =                      .TRUE.        
 itype_lwemiss               =                          2       
/

! io_nml: general switches for model I/O -------------------------------------
&io_nml
 itype_pres_msl              =                          5         ! method for computation of mean sea level pressure
 itype_rh                    =                          1         ! method for computation of relative humidity
 lnetcdf_flt64_output        =                      .FALSE.        ! NetCDF files is written in 64-bit instead of 32-bit accuracy
/

! run_nml: general switches ---------------------------------------------------
&run_nml
 dtime                       =                        900                    ! timestep in seconds
 iforcing                    =                          3                    ! forcing of dynamics and transport by parameterized processes
 lart                        =                      .TRUE.                   ! main switch for ART
 ldynamics                   =                      .TRUE.                   ! compute adiabatic dynamic tendencies
 ltestcase                   =                     .FALSE.                   ! real case run
 ltimer                      =                     .FALSE.                   ! timer for monitoring the runtime of specific routines
 ltransport                  =                      .TRUE.                   ! compute large-scale tracer transport
 lvert_nest                  =                     .FALSE.                   ! vertical nesting
 msg_level                   =                          10                    ! detailed report during integration
 timers_level                =                          1                    ! performance timer granularity
 output                      =                        "nml"                  ! main switch for enabling/disabling components of the model output
 num_lev                     =                         65                    ! number of full levels (atm.) for each domain
/

! nwp_phy_nml: switches for the physics schemes ------------------------------
&nwp_phy_nml
 lrtm_filename               = '{cfg.input_files_scratch_lrtm_filename}'      ! longwave absorption coefficients for RRTM_LW
 cldopt_filename             = '{cfg.input_files_scratch_cldopt_filename}'    ! RRTM cloud optical properties
 dt_rad                      =             $(( 4 * dtime))        ! time step for radiation in s
 dt_conv                     =             $(( 1 * dtime))        ! time step for convection in s (domain specific)
 dt_sso                      =             $(( 2 * dtime))        ! time step for SSO parameterization
 dt_gwd                      =             $(( 2 * dtime))        ! time step for gravity wave drag parameterization
 efdt_min_raylfric           =                       7200.        ! minimum e-folding time of Rayleigh friction
 icapdcycl                   =                          3         ! apply CAPE modification to improve diurnalcycle over tropical land
 icpl_aero_conv              =                          1         ! coupling between autoconversion and Tegen aerosol climatology
 icpl_aero_gscp              =                          0         ! 
 icpl_o3_tp                  =                          1         ! 
 inwp_cldcover               =                          1         ! cloud cover scheme for radiation
 inwp_convection             =                          1         ! convection
 inwp_gscp                   =                          1         ! cloud microphysics and precipitation
 inwp_gwd                    =                          1         ! non-orographic gravity wave drag
 inwp_radiation              =                          1         ! radiation
 inwp_satad                  =                          1         ! saturation adjustment
 inwp_sso                    =                          1         ! subgrid scale orographic drag
 inwp_surface                =                          1         ! surface scheme
 inwp_turb                   =                          1         ! vertical diffusion and transfer
 itype_z0                    =                          2         ! type of roughness length data
 latm_above_top              =                      .TRUE.        ! take into account atmosphere above model top for radiation computation
 ldetrain_conv_prec          =                      .TRUE.        ! Activate detrainment of convective rain and snowl
 mu_rain                     =                         0.5
 rain_n0_factor              =                         0.1
 lshallowconv_only           =                     .FALSE.
 lgrayzone_deepconv          =                      .TRUE.        ! activates shallow and deep convection but not mid-level convection,
/

! nwp_tuning_nml: additional tuning parameters ----------------------------------
&nwp_tuning_nml
 itune_albedo                =                         1
 tune_box_liq_asy            =                         4.0
 tune_gfrcrit                =                         0.333
 tune_gkdrag                 =                         0.0
 tune_gkwake                 =                         0.25
 tune_gust_factor            =                         7.0
 tune_minsnowfrac            =                         0.3
 tune_sgsclifac              =                         1.0
 tune_rcucov                 =                         0.075
 tune_rhebc_land             =                         0.825
 tune_zvz0i                  =                         0.85
 icpl_turb_clc               =                         2
 max_calibfac_clcl           =                         2.0
 tune_box_liq                =                         0.04
/


! turbdiff_nml: turbulent diffusion -------------------------------------------
&turbdiff_nml
 a_hshr                      =                          2.0       ! length scale factor for separated horizontal shear mode
 frcsmot                     =                          0.2       ! these 2 switches together apply vertical smoothing of the TKE source terms
 icldm_turb                  =                          2         ! mode of cloud water representation in turbulence
 imode_frcsmot               =                          2         ! in the tropics (only), which reduces the moist bias in the tropical lower troposphere
 imode_tkesso                =                          2
 itype_sher                  =                          2    
 ltkeshs                     =                          .TRUE.    ! type of shear forcing used in turbulence
 ltkesso                     =                          .TRUE.
 pat_len                     =                          750.      ! effective length scale of thermal surface patterns
 q_crit                      =                          2.0
 rat_sea                     =                          0.8
 tkhmin                      =                          0.5
 tkmmin                      =                          0.75
 tur_len                     =                          300.
 rlam_heat                   =                          10.0
 alpha1                      =                          0.125
/

&lnd_nml
 c_soil                      =                          1.25
 c_soil_urb                  =                          0.5
 cwimax_ml                   =                          5.e-4
 idiag_snowfrac              =                          20
 itype_evsl                  =                          4
 itype_heatcond              =                          3
 itype_lndtbl                =                          4
 itype_root                  =                          2
 itype_snowevap              =                          3
 itype_trvg                  =                          3
 llake                       =                          .TRUE.
 lmulti_snow                 =                          .FALSE.
 lprog_albsi                 =                          .TRUE.
 itype_canopy                =                          2
 lseaice                     =                          .TRUE.
 lsnowtile                   =                          .TRUE.
 nlev_snow                   =                          3
 ntiles                      =                          3
 sstice_mode                 =                          2
/

! radiation_nml: radiation scheme ---------------------------------------------
&radiation_nml
 albedo_type                 =                          2          ! Modis albedo
 irad_o3                     =                          79         ! ozone climatology
 irad_aero                   =                          6
 islope_rad                  =                          0
 direct_albedo_water         =                          3
 albedo_whitecap             =                          1
 vmr_co2                     =                          407.e-06   ! values representative for 2012
 vmr_ch4                     =                          1857.e-09
 vmr_n2o                     =                          330.0e-09
 vmr_o2                      =                          0.20946
 vmr_cfc11                   =                          240.e-12
 vmr_cfc12                   =                          532.e-12 
/

! nonhydrostatic_nml: nonhydrostatic model -----------------------------------
&nonhydrostatic_nml
 damp_height                 =                      12250.0       ! height at which Rayleigh damping of vertical wind starts
 divdamp_fac                 =                      0.004         ! scaling factor for divergence damping
 divdamp_order               =                         24         ! order of divergence damping 
 divdamp_type                =                         32         ! type of divergence damping
 exner_expol                 =                          0.6       ! temporal extrapolation of Exner function
 hbot_qvsubstep              =                      22500.0       ! height above which QV is advected with substepping scheme
 htop_moist_proc             =                      22500.0       ! max. height for moist physics
 iadv_rhotheta               =                          2         ! advection method for rho and rhotheta
 igradp_method               =                          3         ! discretization of horizontal pressure gradient
 itime_scheme                =                          4         ! time integration scheme
 ivctype                     =                          2         ! type of vertical coordinate
 l_open_ubc                  =                     .FALSE.        ! .TRUE.=use open upper boundary condition
 l_zdiffu_t                  =                      .TRUE.        ! specifies computation of Smagorinsky temperature diffusion
 rayleigh_coeff              =                        5.0         ! Rayleigh damping coefficient
 thhgtd_zdiffu               =                        125.0       ! threshold of height difference (temperature diffusion)
 thslp_zdiffu                =                         0.02       ! slope threshold (temperature diffusion)
 vwind_offctr                =                          0.2       ! off-centering in vertical wind solver
/

! sleve_nml: vertical level specification -------------------------------------
&sleve_nml
 decay_exp                   =                          1.2       ! exponent of decay function
 decay_scale_1               =                       4000.0       ! decay scale of large-scale topography component
 decay_scale_2               =                       2500.0       ! decay scale of small-scale topography component
 flat_height                 =                      16000.0       ! height above which the coordinate surfaces are flat
 itype_laydistr               =                           1
 min_lay_thckn               =                         20.0       ! minimum layer thickness of lowermost layer
 stretch_fac                 =                         0.65       ! stretching factor to vary distribution of model levels
 htop_thcknlimit             =                       15000.0     
 top_height                  =                       75000.0      ! height of model top
/

! dynamics_nml: dynamical core -----------------------------------------------
&dynamics_nml
 divavg_cntrwgt              =                          0.50      ! weight of central cell for divergence averaging
 idiv_method                 =                          1         ! method for divergence computation
 iequations                  =                          3         ! type of equations and prognostic variables
 lcoriolis                   =                       .TRUE.       ! Coriolis force
/

! transport_nml: tracer transport ---------------------------------------------
&transport_nml
 ctracer_list                =                                    '12345'                    ! kann vermutlich raus
 ihadv_tracer                =                              52,2,2,2,2,2                     ! tracer specific method to compute horizontal advection
 ivadv_tracer                =                               3,3,3,3,3,3                     ! tracer specific method to compute vertical advection
 itype_hlimit                =                               3,4,4,4,4,4                     ! type of limiter for horizontal transport
 llsq_svd                    =                                     .TRUE.       
 beta_fct                    =                                      1.005
/

! diffusion_nml: horizontal (numerical) diffusion ----------------------------
&diffusion_nml
 hdiff_efdt_ratio            =                         24.0       ! ratio of e-folding time to time step 
 hdiff_order                 =                          5         ! order of nabla operator for diffusion
 hdiff_smag_fac              =                          0.025     ! scaling factor for Smagorinsky diffusion
 itype_t_diffu               =                          2         ! discretization of temperature diffusion
 itype_vn_diffu              =                          1         ! reconstruction method used for Smagorinsky diffusion
 lhdiff_vn                   =                      .TRUE.        ! diffusion on the horizontal wind field
 lhdiff_temp                 =                      .TRUE.        ! diffusion on the temperature field
/

! interpol_nml: settings for internal interpolation methods ------------------
&interpol_nml
 lsq_high_ord                =                          3
 l_intp_c2l                  =                         .TRUE.
 l_mono_c2l                  =                         .TRUE.
/

! nudging_nml: settings for global nudging -----------------------------------
&nudging_nml
nudge_type                  =                       {cfg.nudge_type}        ! global nudging
nudge_var                   =                       'vn'                    ! variables that shall be nudged, default = all (vn,thermdyn,qv)
nudge_start_height          =                       0.                      ! Start nudging at the surface
nudge_end_height            =                       75000.0                 ! End nudging at the top
nudge_profile               =                       2
/

! limarea_nml: settings for global nudging -----------------------------------
&limarea_nml 
itype_latbc                  =                       1                                   ! time-dependent lateral boundary conditions provided by an external source
dtime_latbc                  =          {cfg.nudging_step_seconds}                       ! Time difference between two consecutive boundary data
latbc_path                   =          '{cfg.icon_input_icbc}'                          ! Absolute path to boundary data
latbc_filename               =          'era2icon_R2B03_<y><m><d><h>_nudging.nc'         ! boundary data input filename
latbc_varnames_map_file      =          '{cfg.input_files_scratch_map_file_nudging}'                 ! Dictionary file which maps internal variable names onto GRIB2 shortnames or NetCDF varnames
latbc_boundary_grid          =                      ' '                                  ! no boundary grid: driving data have to be available on entire grid (important to let a space)
/

! art_nml: Aerosols and Reactive Trace gases extension-------------------------------------------------
&art_nml
 lart_diag_out              =                        .TRUE.                 ! If this switch is set to .TRUE., diagnostic
                                                                            ! ... output elds are available. Set it to
                                                                            ! ... .FALSE. when facing memory problems.
 lart_pntSrc                =                        .TRUE.                 ! enables point sources
 !lart_bound_cond            =                        .FALSE.                 ! enables boundary conditions
 lart_chem                  =                        .TRUE.                 ! enables chemistry
 lart_chemtracer            =                        .TRUE.                 ! main switch for the treatment of chemical tracer
 lart_aerosol               =                       .FALSE.                 ! main switch for the treatment of atmospheric aerosol

 iart_seasalt               =                            0        
 iart_init_gas              =                  {cfg.iart_init_gas}
 cart_cheminit_type         =                        'EMAC'
 cart_cheminit_file         =            '{cfg.input_files_scratch_inicond_filename}'
 cart_cheminit_coord        =            '{cfg.input_files_scratch_inicond_filename}'

 cart_chemtracer_xml        = '{cfg.input_files_scratch_chemtracer_xml_filename}'       ! path to xml file for chemical tracers
 cart_pntSrc_xml            = '{cfg.input_files_scratch_pntSrc_xml_filename}'           ! path to xml file for point sources
 cart_input_folder          = '{cfg.art_input_folder}'                      ! absolute Path to ART source code
/

! output_nml: specifies an output stream --------------------------------------
&output_nml
 filetype                    =                          4                                                ! output format: 2=GRIB2, 4=NETCDFv2
 dom                         =                         -1                                                ! write all domains
 output_bounds               =   0.,100000000,{cfg.icon_output_writing_step}                   ! start, end, increment
 output_time_unit            =                          3                                                ! Unit of bounds is in hours instead of seconds
 steps_per_file              =               1                                      ! number of steps per file
 steps_per_file_inclfirst    =                        .FALSE.                                            ! First step is not accounted for in steps_per_file
 include_last                =                        .FALSE.
 mode                        =                          1                                                ! 1: forecast mode (relative t-axis), 2: climate mode (absolute t-axis)
 output_filename             =                    'ICON-ART'
 filename_format             =   '{cfg.icon_output}/<output_filename>_latlon_<datetime2>'                ! file name base
 remap                       =                          1                                                ! 1: remap to lat-lon grid
 reg_lon_def                 =              -179.,2,179                                      
 reg_lat_def                 =               89.,-2,-89.                
 ml_varlist                  =  'z_ifc','pres','qv','rho','temp','u','v','group:ART_CHEMISTRY','OH_Nconc',
/

! output_nml: specifies an output stream --------------------------------------
&output_nml
 filetype                    =                          4                                         ! output format: 2=GRIB2, 4=NETCDFv2
 dom                         =                         -1                                         ! write all domains
 output_bounds               =   0.,100000000,{cfg.icon_output_writing_step}    ! start, end, increment
 output_time_unit            =                          3                                         ! Unit of bounds is in hours instead of seconds
 steps_per_file              =               1                              ! number of steps per file
 steps_per_file_inclfirst    =                        .FALSE.                                     ! First step is not accounted for in steps_per_file
 include_last                =                        .FALSE.
 mode                        =                          1                                         ! 1: forecast mode (mrelative t-axis), 2: climate mode (absolute t-axis)
 output_filename             =                    'ICON-ART'
 filename_format             =   '{cfg.icon_output}/<output_filename>_unstr_<datetime2>'          ! file name base
 remap                       =                          0                                         ! 1: remap to lat-lon grid
 ml_varlist                  =  'z_ifc','pres','qv','rho','temp','u','v','group:ART_CHEMISTRY','OH_Nconc',
/


EOF

# ! ml_varlist                  =  'z_ifc','z_mc','pres','pres_sfc','qv','rho','temp','u','v','group:ART_CHEMISTRY',

# ----------------------------------------------------------------------
# run the model!
# ----------------------------------------------------------------------
handle_error()\{
    # Check for invalid pointer error at the end of icon-art
    if grep -q "free(): invalid pointer" {cfg.logfile} && grep -q "clean-up finished" {cfg.logfile}; then
        exit 0
    else
        exit 1
    fi
\}
 srun ./icon.exe || handle_error()



#  ! output_nml: specifies an output stream --------------------------------------
# &output_nml
#  filetype                    =                          4                                        ! output format: 2=GRIB2, 4=NETCDFv2
#  dom                         =                         -1                                        ! write all domains
#  output_bounds               =        0., 2678400., 3600.                                        ! start, end, increment
#  steps_per_file              =                          1                                        ! number of steps per file
#  mode                        =                          1                                        ! 1: forecast mode (relative t-axis), 2: climate mode (absolute t-axis)
#  include_last                =                      .TRUE.
#  output_filename             =                    'ICON-ART'
#  filename_format             =   '{cfg.icon_output}/<output_filename>_latlon_<datetime2>'         ! file name base
#  remap                       =                          1                                         ! 1: remap to lat-lon grid
#  reg_lon_def                 =              -179.,2,179                                      
#  reg_lat_def                 =               90.,-1,-90.                               
#  ml_varlist                  =  'z_ifc','z_mc','pres','pres_sfc','qc','rh','rho','temp','u','v','w','group:ART_CHEMISTRY',
# /
