#!/bin/bash -l
#SBATCH --account={cfg.compute_account}
#SBATCH --job-name="cosmo_{cfg.inidate_yyyymmddhh}_{cfg.forecasttime}"
#SBATCH --time={cfg.cosmo_walltime}
#SBATCH --nodes={cfg.cosmo_n_nodes}
#SBATCH --ntasks-per-core=1
#SBATCH --ntasks-per-node=36
#SBATCH --cpus-per-task=1
#SBATCH --partition={cfg.compute_queue}
#SBATCH --constraint={cfg.constraint}
#SBATCH --output={logfile}
#SBATCH --chdir={cfg.cosmo_work}
#SBATCH --open-mode=append

export OMP_NUM_THREADS=1

module load daint-{cfg.constraint}

ulimit -s unlimited
ulimit -a

rm -f YU*
rm -f M_*

echo "====================================================="
echo "============== JOB OUTPUT BEGINS ===================="
echo "============== StartTime: `date +%s` s"
echo "============== StartTime: `date`"
echo "====================================================="


srun -u ./cosmoart >> {logfile} 2>&1
pid=$?


echo "====================================================="
echo "============== JOB OUTPUT ENDS ===================="
echo "============== EndTime: `date +%s` s"
echo "============== EndTime: `date` s"
echo "====================================================="

[[ $pid == 0 ]] || {{ echo "Executing COSMO failed" >> {logfile}; exit 1; }}

# check whether COSMO was successful by calculating name of the last
# output file that should have been created

hoursSim=$(expr {cfg.hstop} % 24)
daysSim=$(expr {cfg.hstop} / 24) # bash does not know floating points, it truncates to integer
hoursSimNice=$(printf "%02d" $hoursSim)
daysSimNice=$(printf "%02d" $daysSim)
lastHourFile="lfff${{daysSimNice}}${{hoursSimNice}}0000.nc"

[[ ! -f {cfg.cosmo_output}${{lastHourFile}} ]] || {{ echo "COSMO failed" >> {logfile}; exit 1; }}

# copy log file
cp {logfile} {logfile_finish}
